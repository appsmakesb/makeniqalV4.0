// Generated by view binder compiler. Do not edit!
package com.v4android.usserapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.airbnb.lottie.LottieAnimationView;
import com.library.foysaltech.smarteist.autoimageslider.SliderView;
import com.v4android.usserapp.ExpandableHeightGridView;
import com.v4android.usserapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DashboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView NewOfferId;

  @NonNull
  public final TextView NewOfferId2;

  @NonNull
  public final LinearLayout SliderDots;

  @NonNull
  public final RecyclerView ThirdrecyclarView;

  @NonNull
  public final TextView acc;

  @NonNull
  public final TextView account;

  @NonNull
  public final LinearLayout accountingid;

  @NonNull
  public final TextView accs;

  @NonNull
  public final TextView adb;

  @NonNull
  public final TextView adb2;

  @NonNull
  public final LinearLayout addbalance;

  @NonNull
  public final LinearLayout adduser;

  @NonNull
  public final LinearLayout ads;

  @NonNull
  public final LinearLayout adsf;

  @NonNull
  public final LottieAnimationView animationView;

  @NonNull
  public final ExpandableHeightGridView atachviewx;

  @NonNull
  public final TextView balance;

  @NonNull
  public final TextView band;

  @NonNull
  public final LinearLayout chpic;

  @NonNull
  public final LinearLayout dlock;

  @NonNull
  public final TextView fd;

  @NonNull
  public final RelativeLayout five;

  @NonNull
  public final ImageView flag;

  @NonNull
  public final ImageView flag13;

  @NonNull
  public final ImageView flag2;

  @NonNull
  public final ImageView flag23;

  @NonNull
  public final ImageView flag322;

  @NonNull
  public final RelativeLayout four;

  @NonNull
  public final SliderView fourthSlider;

  @NonNull
  public final CircleImageView hm;

  @NonNull
  public final SliderView imageSlider;

  @NonNull
  public final CircleImageView ivCircularUserImage;

  @NonNull
  public final TextView lev;

  @NonNull
  public final TextView leveln;

  @NonNull
  public final TextView link;

  @NonNull
  public final LinearLayout liveSupport;

  @NonNull
  public final LinearLayout logout;

  @NonNull
  public final LinearLayout mainlayout;

  @NonNull
  public final TextView myhistory;

  @NonNull
  public final LinearLayout myusers;

  @NonNull
  public final LinearLayout noadd;

  @NonNull
  public final ImageView notic;

  @NonNull
  public final LinearLayout noticeb;

  @NonNull
  public final RelativeLayout onebd;

  @NonNull
  public final LinearLayout passchange;

  @NonNull
  public final LinearLayout pinchange;

  @NonNull
  public final RecyclerView recyclarView;

  @NonNull
  public final ScrollView scSpots;

  @NonNull
  public final LinearLayout secr;

  @NonNull
  public final LinearLayout secstep;

  @NonNull
  public final LinearLayout sendmoney;

  @NonNull
  public final TextView set;

  @NonNull
  public final LinearLayout shoping;

  @NonNull
  public final TextView suggestionId;

  @NonNull
  public final LinearLayout support;

  @NonNull
  public final LinearLayout telegram;

  @NonNull
  public final RelativeLayout threebd;

  @NonNull
  public final TextView tname;

  @NonNull
  public final RelativeLayout twobd;

  @NonNull
  public final RelativeLayout uitop;

  @NonNull
  public final ViewPager viewpager;

  @NonNull
  public final LinearLayout whatsapp;

  @NonNull
  public final LinearLayout youtube;

  private DashboardBinding(@NonNull LinearLayout rootView, @NonNull TextView NewOfferId,
      @NonNull TextView NewOfferId2, @NonNull LinearLayout SliderDots,
      @NonNull RecyclerView ThirdrecyclarView, @NonNull TextView acc, @NonNull TextView account,
      @NonNull LinearLayout accountingid, @NonNull TextView accs, @NonNull TextView adb,
      @NonNull TextView adb2, @NonNull LinearLayout addbalance, @NonNull LinearLayout adduser,
      @NonNull LinearLayout ads, @NonNull LinearLayout adsf,
      @NonNull LottieAnimationView animationView, @NonNull ExpandableHeightGridView atachviewx,
      @NonNull TextView balance, @NonNull TextView band, @NonNull LinearLayout chpic,
      @NonNull LinearLayout dlock, @NonNull TextView fd, @NonNull RelativeLayout five,
      @NonNull ImageView flag, @NonNull ImageView flag13, @NonNull ImageView flag2,
      @NonNull ImageView flag23, @NonNull ImageView flag322, @NonNull RelativeLayout four,
      @NonNull SliderView fourthSlider, @NonNull CircleImageView hm,
      @NonNull SliderView imageSlider, @NonNull CircleImageView ivCircularUserImage,
      @NonNull TextView lev, @NonNull TextView leveln, @NonNull TextView link,
      @NonNull LinearLayout liveSupport, @NonNull LinearLayout logout,
      @NonNull LinearLayout mainlayout, @NonNull TextView myhistory, @NonNull LinearLayout myusers,
      @NonNull LinearLayout noadd, @NonNull ImageView notic, @NonNull LinearLayout noticeb,
      @NonNull RelativeLayout onebd, @NonNull LinearLayout passchange,
      @NonNull LinearLayout pinchange, @NonNull RecyclerView recyclarView,
      @NonNull ScrollView scSpots, @NonNull LinearLayout secr, @NonNull LinearLayout secstep,
      @NonNull LinearLayout sendmoney, @NonNull TextView set, @NonNull LinearLayout shoping,
      @NonNull TextView suggestionId, @NonNull LinearLayout support, @NonNull LinearLayout telegram,
      @NonNull RelativeLayout threebd, @NonNull TextView tname, @NonNull RelativeLayout twobd,
      @NonNull RelativeLayout uitop, @NonNull ViewPager viewpager, @NonNull LinearLayout whatsapp,
      @NonNull LinearLayout youtube) {
    this.rootView = rootView;
    this.NewOfferId = NewOfferId;
    this.NewOfferId2 = NewOfferId2;
    this.SliderDots = SliderDots;
    this.ThirdrecyclarView = ThirdrecyclarView;
    this.acc = acc;
    this.account = account;
    this.accountingid = accountingid;
    this.accs = accs;
    this.adb = adb;
    this.adb2 = adb2;
    this.addbalance = addbalance;
    this.adduser = adduser;
    this.ads = ads;
    this.adsf = adsf;
    this.animationView = animationView;
    this.atachviewx = atachviewx;
    this.balance = balance;
    this.band = band;
    this.chpic = chpic;
    this.dlock = dlock;
    this.fd = fd;
    this.five = five;
    this.flag = flag;
    this.flag13 = flag13;
    this.flag2 = flag2;
    this.flag23 = flag23;
    this.flag322 = flag322;
    this.four = four;
    this.fourthSlider = fourthSlider;
    this.hm = hm;
    this.imageSlider = imageSlider;
    this.ivCircularUserImage = ivCircularUserImage;
    this.lev = lev;
    this.leveln = leveln;
    this.link = link;
    this.liveSupport = liveSupport;
    this.logout = logout;
    this.mainlayout = mainlayout;
    this.myhistory = myhistory;
    this.myusers = myusers;
    this.noadd = noadd;
    this.notic = notic;
    this.noticeb = noticeb;
    this.onebd = onebd;
    this.passchange = passchange;
    this.pinchange = pinchange;
    this.recyclarView = recyclarView;
    this.scSpots = scSpots;
    this.secr = secr;
    this.secstep = secstep;
    this.sendmoney = sendmoney;
    this.set = set;
    this.shoping = shoping;
    this.suggestionId = suggestionId;
    this.support = support;
    this.telegram = telegram;
    this.threebd = threebd;
    this.tname = tname;
    this.twobd = twobd;
    this.uitop = uitop;
    this.viewpager = viewpager;
    this.whatsapp = whatsapp;
    this.youtube = youtube;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.NewOfferId;
      TextView NewOfferId = ViewBindings.findChildViewById(rootView, id);
      if (NewOfferId == null) {
        break missingId;
      }

      id = R.id.NewOfferId2;
      TextView NewOfferId2 = ViewBindings.findChildViewById(rootView, id);
      if (NewOfferId2 == null) {
        break missingId;
      }

      id = R.id.SliderDots;
      LinearLayout SliderDots = ViewBindings.findChildViewById(rootView, id);
      if (SliderDots == null) {
        break missingId;
      }

      id = R.id.ThirdrecyclarView;
      RecyclerView ThirdrecyclarView = ViewBindings.findChildViewById(rootView, id);
      if (ThirdrecyclarView == null) {
        break missingId;
      }

      id = R.id.acc;
      TextView acc = ViewBindings.findChildViewById(rootView, id);
      if (acc == null) {
        break missingId;
      }

      id = R.id.account;
      TextView account = ViewBindings.findChildViewById(rootView, id);
      if (account == null) {
        break missingId;
      }

      id = R.id.accountingid;
      LinearLayout accountingid = ViewBindings.findChildViewById(rootView, id);
      if (accountingid == null) {
        break missingId;
      }

      id = R.id.accs;
      TextView accs = ViewBindings.findChildViewById(rootView, id);
      if (accs == null) {
        break missingId;
      }

      id = R.id.adb;
      TextView adb = ViewBindings.findChildViewById(rootView, id);
      if (adb == null) {
        break missingId;
      }

      id = R.id.adb2;
      TextView adb2 = ViewBindings.findChildViewById(rootView, id);
      if (adb2 == null) {
        break missingId;
      }

      id = R.id.addbalance;
      LinearLayout addbalance = ViewBindings.findChildViewById(rootView, id);
      if (addbalance == null) {
        break missingId;
      }

      id = R.id.adduser;
      LinearLayout adduser = ViewBindings.findChildViewById(rootView, id);
      if (adduser == null) {
        break missingId;
      }

      id = R.id.ads;
      LinearLayout ads = ViewBindings.findChildViewById(rootView, id);
      if (ads == null) {
        break missingId;
      }

      id = R.id.adsf;
      LinearLayout adsf = ViewBindings.findChildViewById(rootView, id);
      if (adsf == null) {
        break missingId;
      }

      id = R.id.animation_view;
      LottieAnimationView animationView = ViewBindings.findChildViewById(rootView, id);
      if (animationView == null) {
        break missingId;
      }

      id = R.id.atachviewx;
      ExpandableHeightGridView atachviewx = ViewBindings.findChildViewById(rootView, id);
      if (atachviewx == null) {
        break missingId;
      }

      id = R.id.balance;
      TextView balance = ViewBindings.findChildViewById(rootView, id);
      if (balance == null) {
        break missingId;
      }

      id = R.id.band;
      TextView band = ViewBindings.findChildViewById(rootView, id);
      if (band == null) {
        break missingId;
      }

      id = R.id.chpic;
      LinearLayout chpic = ViewBindings.findChildViewById(rootView, id);
      if (chpic == null) {
        break missingId;
      }

      id = R.id.dlock;
      LinearLayout dlock = ViewBindings.findChildViewById(rootView, id);
      if (dlock == null) {
        break missingId;
      }

      id = R.id.fd;
      TextView fd = ViewBindings.findChildViewById(rootView, id);
      if (fd == null) {
        break missingId;
      }

      id = R.id.five;
      RelativeLayout five = ViewBindings.findChildViewById(rootView, id);
      if (five == null) {
        break missingId;
      }

      id = R.id.flag;
      ImageView flag = ViewBindings.findChildViewById(rootView, id);
      if (flag == null) {
        break missingId;
      }

      id = R.id.flag13;
      ImageView flag13 = ViewBindings.findChildViewById(rootView, id);
      if (flag13 == null) {
        break missingId;
      }

      id = R.id.flag2;
      ImageView flag2 = ViewBindings.findChildViewById(rootView, id);
      if (flag2 == null) {
        break missingId;
      }

      id = R.id.flag23;
      ImageView flag23 = ViewBindings.findChildViewById(rootView, id);
      if (flag23 == null) {
        break missingId;
      }

      id = R.id.flag322;
      ImageView flag322 = ViewBindings.findChildViewById(rootView, id);
      if (flag322 == null) {
        break missingId;
      }

      id = R.id.four;
      RelativeLayout four = ViewBindings.findChildViewById(rootView, id);
      if (four == null) {
        break missingId;
      }

      id = R.id.fourthSlider;
      SliderView fourthSlider = ViewBindings.findChildViewById(rootView, id);
      if (fourthSlider == null) {
        break missingId;
      }

      id = R.id.hm;
      CircleImageView hm = ViewBindings.findChildViewById(rootView, id);
      if (hm == null) {
        break missingId;
      }

      id = R.id.imageSlider;
      SliderView imageSlider = ViewBindings.findChildViewById(rootView, id);
      if (imageSlider == null) {
        break missingId;
      }

      id = R.id.iv_circular_user_image;
      CircleImageView ivCircularUserImage = ViewBindings.findChildViewById(rootView, id);
      if (ivCircularUserImage == null) {
        break missingId;
      }

      id = R.id.lev;
      TextView lev = ViewBindings.findChildViewById(rootView, id);
      if (lev == null) {
        break missingId;
      }

      id = R.id.leveln;
      TextView leveln = ViewBindings.findChildViewById(rootView, id);
      if (leveln == null) {
        break missingId;
      }

      id = R.id.link;
      TextView link = ViewBindings.findChildViewById(rootView, id);
      if (link == null) {
        break missingId;
      }

      id = R.id.liveSupport;
      LinearLayout liveSupport = ViewBindings.findChildViewById(rootView, id);
      if (liveSupport == null) {
        break missingId;
      }

      id = R.id.logout;
      LinearLayout logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      LinearLayout mainlayout = (LinearLayout) rootView;

      id = R.id.myhistory;
      TextView myhistory = ViewBindings.findChildViewById(rootView, id);
      if (myhistory == null) {
        break missingId;
      }

      id = R.id.myusers;
      LinearLayout myusers = ViewBindings.findChildViewById(rootView, id);
      if (myusers == null) {
        break missingId;
      }

      id = R.id.noadd;
      LinearLayout noadd = ViewBindings.findChildViewById(rootView, id);
      if (noadd == null) {
        break missingId;
      }

      id = R.id.notic;
      ImageView notic = ViewBindings.findChildViewById(rootView, id);
      if (notic == null) {
        break missingId;
      }

      id = R.id.noticeb;
      LinearLayout noticeb = ViewBindings.findChildViewById(rootView, id);
      if (noticeb == null) {
        break missingId;
      }

      id = R.id.onebd;
      RelativeLayout onebd = ViewBindings.findChildViewById(rootView, id);
      if (onebd == null) {
        break missingId;
      }

      id = R.id.passchange;
      LinearLayout passchange = ViewBindings.findChildViewById(rootView, id);
      if (passchange == null) {
        break missingId;
      }

      id = R.id.pinchange;
      LinearLayout pinchange = ViewBindings.findChildViewById(rootView, id);
      if (pinchange == null) {
        break missingId;
      }

      id = R.id.recyclarView;
      RecyclerView recyclarView = ViewBindings.findChildViewById(rootView, id);
      if (recyclarView == null) {
        break missingId;
      }

      id = R.id.sc_spots;
      ScrollView scSpots = ViewBindings.findChildViewById(rootView, id);
      if (scSpots == null) {
        break missingId;
      }

      id = R.id.secr;
      LinearLayout secr = ViewBindings.findChildViewById(rootView, id);
      if (secr == null) {
        break missingId;
      }

      id = R.id.secstep;
      LinearLayout secstep = ViewBindings.findChildViewById(rootView, id);
      if (secstep == null) {
        break missingId;
      }

      id = R.id.sendmoney;
      LinearLayout sendmoney = ViewBindings.findChildViewById(rootView, id);
      if (sendmoney == null) {
        break missingId;
      }

      id = R.id.set;
      TextView set = ViewBindings.findChildViewById(rootView, id);
      if (set == null) {
        break missingId;
      }

      id = R.id.shoping;
      LinearLayout shoping = ViewBindings.findChildViewById(rootView, id);
      if (shoping == null) {
        break missingId;
      }

      id = R.id.suggestionId;
      TextView suggestionId = ViewBindings.findChildViewById(rootView, id);
      if (suggestionId == null) {
        break missingId;
      }

      id = R.id.support;
      LinearLayout support = ViewBindings.findChildViewById(rootView, id);
      if (support == null) {
        break missingId;
      }

      id = R.id.telegram;
      LinearLayout telegram = ViewBindings.findChildViewById(rootView, id);
      if (telegram == null) {
        break missingId;
      }

      id = R.id.threebd;
      RelativeLayout threebd = ViewBindings.findChildViewById(rootView, id);
      if (threebd == null) {
        break missingId;
      }

      id = R.id.tname;
      TextView tname = ViewBindings.findChildViewById(rootView, id);
      if (tname == null) {
        break missingId;
      }

      id = R.id.twobd;
      RelativeLayout twobd = ViewBindings.findChildViewById(rootView, id);
      if (twobd == null) {
        break missingId;
      }

      id = R.id.uitop;
      RelativeLayout uitop = ViewBindings.findChildViewById(rootView, id);
      if (uitop == null) {
        break missingId;
      }

      id = R.id.viewpager;
      ViewPager viewpager = ViewBindings.findChildViewById(rootView, id);
      if (viewpager == null) {
        break missingId;
      }

      id = R.id.whatsapp;
      LinearLayout whatsapp = ViewBindings.findChildViewById(rootView, id);
      if (whatsapp == null) {
        break missingId;
      }

      id = R.id.youtube;
      LinearLayout youtube = ViewBindings.findChildViewById(rootView, id);
      if (youtube == null) {
        break missingId;
      }

      return new DashboardBinding((LinearLayout) rootView, NewOfferId, NewOfferId2, SliderDots,
          ThirdrecyclarView, acc, account, accountingid, accs, adb, adb2, addbalance, adduser, ads,
          adsf, animationView, atachviewx, balance, band, chpic, dlock, fd, five, flag, flag13,
          flag2, flag23, flag322, four, fourthSlider, hm, imageSlider, ivCircularUserImage, lev,
          leveln, link, liveSupport, logout, mainlayout, myhistory, myusers, noadd, notic, noticeb,
          onebd, passchange, pinchange, recyclarView, scSpots, secr, secstep, sendmoney, set,
          shoping, suggestionId, support, telegram, threebd, tname, twobd, uitop, viewpager,
          whatsapp, youtube);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
